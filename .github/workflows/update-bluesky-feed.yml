name: Update Bluesky Feed
on:
  schedule:
    - cron: '0 * * * *' # hourly
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-feed:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Generate Bluesky feed
        env:
          BLUESKY_HANDLE: ${{ secrets.BLUESKY_HANDLE }}
          BLUESKY_APP_PASSWORD: ${{ secrets.BLUESKY_APP_PASSWORD }}
        run: |
          mkdir -p temp_feed
          cd temp_feed
          npm init -y
          npm install @atproto/api
          node -e 'const { BskyAgent } = require("@atproto/api"); const fs = require("fs"); const agent = new BskyAgent({ service: "https://bsky.social" }); async function main() { await agent.login({ identifier: process.env.BLUESKY_HANDLE, password: process.env.BLUESKY_APP_PASSWORD }); const feed = await agent.getAuthorFeed({ actor: process.env.BLUESKY_HANDLE, limit: 10 }); const posts = feed.data.feed.map(item => ({ text: item.post.record.text, blueskyUrl: `https://bsky.app/profile/${item.post.author.handle}/post/${item.post.uri.split("/").pop()}`, author: { handle: item.post.author.handle, displayName: item.post.author.displayName, avatar: item.post.author.avatar }, images: item.post.embed?.images?.map(img => ({ url: img.fullsize, alt: img.alt })), externalLink: item.post.embed?.external ? { url: item.post.embed.external.uri, title: item.post.embed.external.title, description: item.post.embed.external.description, thumb: item.post.embed.external.thumb } : undefined, quotedPost: item.post.embed?.record?.__typename === "app.bsky.embed.record#viewRecord" ? { handle: item.post.embed.record.author.handle, text: item.post.embed.record.value.text, url: `https://bsky.app/profile/${item.post.embed.record.author.handle}/post/${item.post.embed.record.uri.split("/").pop()}` } : undefined })); const summary = { handle: process.env.BLUESKY_HANDLE, generatedAt: new Date().toISOString(), posts: posts.map(p => ({ text: p.text.substring(0, 100), url: p.blueskyUrl })) }; fs.writeFileSync("bluesky-feed.json", JSON.stringify({ handle: process.env.BLUESKY_HANDLE, generatedAt: new Date().toISOString(), posts }, null, 2)); fs.writeFileSync("bluesky-feed-summary.json", JSON.stringify(summary, null, 2)); } main();'

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Create a new branch
          BRANCH_NAME="bot/update-bluesky-feed-$(date +%s)"
          git checkout -b $BRANCH_NAME
          
          # Move the generated files to the correct location
          mkdir -p content/files
          mv temp_feed/bluesky-feed.json content/files/bluesky-feed.json
          mv temp_feed/bluesky-feed-summary.json content/files/bluesky-feed-summary.json
          
          # Add, commit, and push the changes
          git add -f content/files/bluesky-feed*.json
          git commit -m "ðŸ¤– Update Bluesky feed"
          git push origin $BRANCH_NAME
          
          # Create a pull request
          gh pr create --title "ðŸ¤– Update Bluesky feed" --body "Automated update of the Bluesky feed."
